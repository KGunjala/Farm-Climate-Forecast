3 DIFFERENT PYTHON CODE FILES (NOTEBOOKS) HAVE BEEN PROVIDED. PLEASE READ ABOUT EACH OF THEM.

1) Appropriate Model And Parameter Research
2) Trainer
3) Predictor

THE Prediction FILE IS A PIPELINE FOR SENDING IN NEW DATA POINTS
ON WHICH PREDICTIONS WILL BE RETURNED ACCORDING TO OUR NEEDS.

NECESSARY TO RUN THIS FILE FROM THE DIRECTORY WHERE THE Trainer
FILE IS PLACED. BECAUSE Trainer SAVES THE MODEL WEIGHTS AND SUPPLEMENTARY
DATA WHICH IS USED BY THE Predictor.

*** THE PREDICTION FILE INCLUDES MANY OPTIONS FOR PROVIDING INPUT:

no.ofDays :   YOU INPUT A NUMBER AND THE MODEL WOULD OUTPUT
PREDICTIONS FOR THOSE MANY DAYS FROM THE CURRENT DATE.
CURRENT DATE WOULD BE THE SYSTEM'S DATE. GIVEN THAT OUR DATA
STRETCHES ONLY UNTIL 2019 Dec, RUNNING THIS OPTION WOULD GIVE YOU
PREDICTIONS STARTING FROM (Jan 2020) to (Present Date + Input Number)

no.ofSteps:   ANOTHR NUMBER INPUT, THE MODEL WOULD OUTPUT PREDICTIONS
FOR THOSE MANY STEPS INTO THE FUTURE FROM THE EXISTING DATA.
EXAMPLE : IF no.ofSteps = 120, THE MODEL WOULD OUTPUT PREDICTIONS FROM 
JAN 1ST 2020 00:00 TO JAN 5TH 2020 00:00. EACH STEP CORRESPONDS TO 1 HOUR

datestring :   ENTER A DATE IN THE STRING FORMAT

Jsonfile : ENTER THE PATH OF A FOLDER THAT CONTAINS INPUT IN
THE FORM OF JSON FILES. NECESSARY THAT EACH JSONFILE CONTAINS 
AN ELEMENT NAMED 'datetime'. PRESENT WORK CAN ALLOW ONLY ONE ROW
OF INPUT DATA PER JSON FILE. CAN BE SCALED UP LATER

Jsonstring : ENTER A JSONSTRING INPUT


*** OPTIONS FOR OUTPUT:

Precise: outputs predictions precisely for that timestamp

Until : outputs predictions starting from most recent data until the provided timestamp

json : outputs the predictions in json format

df : outputs the predictions in df object

--------------------------------------------

THE Trainer FILE IS A REFACTORING OF THE IMPORTANT STEPS INVOLVED IN
TRAINING, CODED INTO CRISP FUNCTIONS.

BASICALLY, THE TRAINING STEPS HAVE BEEN AUTOMATED. CAN BE RUN AT
SCHEDULED INTERVALS WHEN NEW DATA IS AVAILABLE.

THIS INVOLVES PRE-PROCESSING AND FEATURE ENGINEERING STEPS, AND THE 
MODEL FITTING STEPS

THIS FILE ALSO SAVES PREPARED DATASETS INTO THE WORKING
DIRECTORY. 

THIS ENSURES THAT THESE DATSETS AND THE MODEL CAN BE CALLED ON WHILE PREDICTING.
INSTEAD OF GOING THROUGH ALL THE DATA PREPARATION STEPS, ONE CAN INVOKE THESE
PREPARED DATASETS IN THE PREDICTION STEP, WHICH WOULD HELP IN REDUCING LATENCY.


**NOTE : DATASETS ARE REQUIRED FOR PREDICTION SINCE THE MODEL TRAINED
         REMOVES NON STATIONARY COMPONENTS (TREND AND SEASONALITY) BEFORE
	PREDICTIONS. TO RE-INTRODUCE THESE COMPONENTS, THESE DATASETS ARE
	REQUIRED 


ALL OF THIS WOULD ALLOW EASY RETRAINING OF THE MODEL WHEN NEW DATA 
BECOMES AVAILABLE, AND EASIER PREDICTION

--------------------------------------------------

THE Appropriate Model And Parameter Research FILE HELPED ME
FIGURE OUT THE BEST PARAMETERS FOR THE MODEL. IT IS MORE OF
A RESEARCH/EXPLORATORY UNDERTAKING.

BASED ON THE FINDINGS IN THIS STEP, THE Training AND Prediction CODES 
HAVE BEEN WRITTEN



